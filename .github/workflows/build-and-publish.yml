name: Build and Publish

on:
  push:
    branches:
     - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify

      - run: mkdir staging-jar && cp target/*.jar staging-jar
      - uses: actions/upload-artifact@v4
        with:
          name: break-time.jar
          path: staging-jar
          retention-days: 90
      - run: mkdir staging-exe && cp target/*.exe staging-exe
      - uses: actions/upload-artifact@v4
        with:
          name: break-time.exe
          path: staging-exe
          retention-days: 90
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: target/*.jar
          asset_name: break-time.jar
          asset_content_type: application/java-archive